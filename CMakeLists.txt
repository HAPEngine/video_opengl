CMAKE_MINIMUM_REQUIRED(VERSION 3.5)
PROJECT (hap_video_opengl)


FIND_PACKAGE(OpenGL REQUIRED)
INCLUDE_DIRECTORIES(${OpenGL_INCLUDE_DIRS})
LINK_DIRECTORIES(${OpenGL_LIBRARY_DIRS})
ADD_DEFINITIONS(${OpenGL_DEFINITIONS})
IF(NOT OPENGL_FOUND)
    MESSAGE(FATAL_ERROR " OPENGL not found!")
ENDIF(NOT OPENGL_FOUND)


FILE(GLOB VIDEO_OPENGL_SOURCES src/*.c src/*.m)
ADD_LIBRARY(hap_video_opengl SHARED ${VIDEO_OPENGL_SOURCES})


# On OSX, we want to include SDL for Window creation
IF(${CMAKE_HOST_SYSTEM_NAME} MATCHES "Darwin")
  # Avoid SDL wrapping main()

  SET(SDL_LIBRARY "SDL2")
  SET(SDL_BUILDING_LIBRARY "Setting this avoids wrapping main loop")
  FIND_PACKAGE(SDL REQUIRED)
  TARGET_LINK_LIBRARIES(hap_video_opengl ${SDL_LIBRARY})
  TARGET_INCLUDE_DIRECTORIES(hap_video_opengl PUBLIC ${SDL_INCLUDE_DIR})
  IF(NOT SDL_FOUND)
    MESSAGE(FATAL_ERROR " SDL not found!")
  ENDIF(NOT SDL_FOUND)
ELSEIF(${CMAKE_HOST_SYSTEM_NAME} MATCHES "Linux")

  SET(X11_LIBRARY "X11")
  SET(X11_BUILDING_LIBRARY "Setting this avoids wrapping main loop")
  FIND_PACKAGE(X11 REQUIRED)
  TARGET_LINK_LIBRARIES(hap_video_opengl ${X11_LIBRARY})
  TARGET_INCLUDE_DIRECTORIES(hap_video_opengl PUBLIC ${X11_INCLUDE_DIR})
  IF(NOT X11_FOUND)
    MESSAGE(FATAL_ERROR " X11 not found!")
  ENDIF(NOT X11_FOUND)

ENDIF(${CMAKE_HOST_SYSTEM_NAME} MATCHES "Darwin")


TARGET_LINK_LIBRARIES(hap_video_opengl ${OPENGL_LIBRARIES})
